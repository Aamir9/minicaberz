﻿@model thechauffeurteam.Models.ViewModel.jobVM
@{


    int UserSessionId = 0;

    if (Session["user"] != null)
    {
        UserSessionId = int.Parse(Session["user"].ToString());


    }


}

<style>

    #via_1, #via_2, .pick, .Drop {
        position: relative;
    }

        #via_1 i, #via_2 i, .pick i, .Drop i {
            position: absolute;
            padding: 10px;
            /*pointer-events: none;*/
        }

        .pick i, .Drop i, #via_1 i, #via_2 i {
            right: 0px;
        }

    .pick, .Drop {
        width: 100%;
    }

    #minus_via_1, #minus_via_2 {
        cursor: pointer !important;
    }

    .mapouter {
        text-align: right;
        height: 500px;
        width: 100%;
        margin-top:-1.8%;
        
    }

    #gmap_canvas {
        overflow: hidden;
        background: none !important;
        height: 500px;
        width: 100%;
    }

    #MainDiv {
        position: absolute;
        top: 25%;
        margin-left: 4.5%;
    }

    #MainDiv {
    }
</style>

<div id="MainDiv"  >

    <div class="row">

        <div class="col-md-12 driverReg">

            <div class="row justify-content-center">
                <div class="col-md-10 register-form">



                    <div id="refreshForm2" title="Reset ">
                        <span class="btn btn-sm btn-danger bad">    <i class="fas fa-sync-alt"></i>   </span>
                    </div>

                    <div id="addVia2" title="click to add via">
                        <span class="btn btn-sm btn-info bad">  <i class="fas fa-plus"></i>  </span>
                    </div>
                    <div id="addVia2" class="addVia2_again" title="click to add via" style="display:none;">
                        <span class="btn btn-sm btn-info bad">  <i class="fas fa-plus"></i>  </span>
                    </div>
                    <div id="formMain2">



                        <div class="formBody p-4">

                            <form method="post" id="distanceform" action="~/JobBooking/Insert">

                                <div class="row">
                                    <div class="col-md-6">

                                      

                                    

                                        <div class="form-group pick">
                                            <input type="hidden" id="searchTextField" placeholder="enter the informtion">

                                            @*<i class="fa fa-car" aria-hidden="true"></i>*@
                                            @*<input type="text" id="from_places" placeholder="Pick Up Address" class="form-control" />*@

                                            @Html.TextBoxFor(m => m.pickUp, new { @class = "form-control", @placeholder = "Pick Up Address", @id = "from_places" })

                                            @Html.HiddenFor(m => m.pickUp, new { @id = "origin" })
                                            @*<input type="hidden" id="origin" name="origin" />*@

                                            <input type="hidden" name="jobType" id="jobType" />
                                            @Html.HiddenFor(m => m.PassengerId, new { @id = "passengerId" })
                                            @*<input type="hidden" name="passengerId" id="passengerId" />*@


                                            @Html.HiddenFor(m => m.CarType, new { @id = "selectedcar" })
                                            @*<input type="hidden" name="selectedcar" id="selectedcar" />*@

                                            <p class="text-danger" id="inputError1"> </p>
                                           
                                            <input type="hidden" name="postcode" id="postcode" value="@ViewBag.postcode" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">

                                        <div class="form-group Drop">
                                            @*<i class="fas fa-globe"></i>*@
                                            @*<input type="text" id="to_places" name="dropOff" placeholder="Drop Off Address" class="form-control" />*@

                                            @Html.TextBoxFor(m => m.DropUP, new { @class = "form-control", @placeholder = "Drop Off Addres", @id = "to_places" })


                                            @Html.HiddenFor(m => m.DropUP, new { @id = "destination" })

                                            @*<input id="destination" name="destination" type="hidden" />*@
                                            <p class="text-danger" id="inputError2"> </p>
                                        </div>
                                    </div>

                                </div>
                             

                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group" id="mainDirection">
                                            <select class="form-control" id="slectoption" name="slectoption">
                                                <option value="">One Way</option>
                                                <option value="return">Return</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">


                                            <input id="datepicker" name="date" type="text" class="form-control" placeholder="Pick-up Date" value="">
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">

                                            <input type="text" id="timepicker" name="time" class="timepicker form-control" placeholder="Pick-up Time" value="">

                                        </div>
                                    </div>
                                </div>




                                <div id="returndiv" style="display:none;">


                                    <div class="row">
                                        <div class="col-md-4">
                                            <label class="returnDateTime">Return Date & Time </label><br />
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <input id="datepicker2" name="date2" type="text" class="form-control" placeholder=" Return Date" value="">
                                            </div>

                                        </div>
                                        <div class="col-md-4">

                                            <div class="form-group">

                                                <input type="text" id="timepicker2" name="time2" class="timepicker2 form-control" placeholder="Return Time" value="">

                                            </div>
                                        </div>


                                    </div>

                                </div>


                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <select class="form-control" id="cartype" name="cartype">
                                                @if (Model.CarType == "Saloon")
                                                {

                                                    <option value="">Car Type</option>
                                                    <option value="Saloon" selected>Saloon</option>
                                                    <option value="Estate">Estate</option>
                                                    <option value="MPV">MPV</option>

                                                }
                                                else if (Model.CarType == "Estate")
                                                {
                                                    <option value="">Car Type</option>
                                                    <option value="Saloon">Saloon</option>
                                                    <option value="Estate" selected>Estate</option>
                                                    <option value="MPV">MPV</option>
                                                }

                                                else if (Model.CarType == "MPV")
                                                {
                                                    <option value="">Car Type</option>
                                                    <option value="Saloon">Saloon</option>
                                                    <option value="Estate">Estate</option>
                                                    <option value="MPV" selected>MPV</option>
                                                }
                                                else
                                                {
                                                    <option value="">Car Type</option>
                                                    <option value="Saloon">Saloon</option>
                                                    <option value="Estate">Estate</option>
                                                    <option value="MPV">MPV</option>
                                                }

                                            </select>
                                            <p class="text-danger errormsg"></p>
                                        </div>

                                    </div>


                                </div>






                                <div class="row" id="pdm">
                                    <div class="col-md-4 col-sm-12">
                                        <div class="form-group">
                                            <p class="badge badge-primary py-md-2 pl-md-3 pr-md-5  w-100" id="in_mile" name="in_mile">

                                                @Html.DisplayFor(m => m.Mile, new { @id = "inmile", @class = "form-control" }) miles

                                            </p>
                                          

                                            @Html.HiddenFor(m => m.Mile, new { @id = "inMiles" })
                                        </div>

                                    </div>



                                    <div class="col-md-8 col-sm-12">
                                        <div class="form-group">
                                            <p class="badge badge-primary py-md-2 pl-md-3 pr-md-5  w-100" id="in_mile" name="in_mile">

                                                Fare: &nbsp;&nbsp;  <i class="fas fa-pound-sign"></i> &nbsp;

                                                @*@Html.DisplayFor(m => m.Price, new { @id = "Prices", @class = "form-control" })*@

                                             
                                                <spna id="Prices">@Model.Price</spna>

                                                 
                                                @Html.HiddenFor(m => m.Price, new { @id = "priceVal" })
                                                <i class="fa fa-spinner fa-spin" style="display:none;"></i>
                                            </p>
                                            @*<input type="hidden" name="price" id="price" />*@

                                           

                                        </div>
                                    </div>
                                </div>


                                <div class="form-group " id="DriverMsg">

                                    @Html.DisplayFor(m => m.DriverMessage, new { @class = "form-control", @placeholder = "Message For Driver, Flight Number etc" })

                                </div>

                                <div class="col-md-12 text-center ">
                                        <input type="button" class="btn" id="GetQuote" style=" background: #1853a1;color:white; display:none;" value="Get Quote Now " />
                                    </div>
                                <div class="form-group  text-center ">
                                    <input type="submit" class="btn btn-primary" onclick="InsertJob()" id="BookNow" style="background: #1853a1;color:white;" value="Book Now " />
                                </div>
                                @*<div class="form-group  text-center ">

                                        <a href="#showLogin" class="btn btn-primary" id="LoginPopShow" style="background: #1853a1;color:white; display:none;"> Book Now</a>
                                    </div>*@

                            </form>



                        </div>

                    </div>





                </div>
            </div>


        </div>
    </div><!--row-->
</div>
<div class="mapouter">
    <div class="gmap_canvas">

        <iframe id="gmap_canvas" src="https://maps.google.com/maps?q=London&t=&z=13&ie=UTF8&iwloc=&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe><a href="https://www.crocothemes.net"></a>
    </div>

</div>





<!--login box-->
<div id="showLogin" style="display:none;">
    <div class="container">
        <div class="row">
            <div class="col-md-12 alert alert-info">
                <h3 class="text-center">Login</h3>
                <form id="loginForm">
                    <div id="msg"><ul style="color:red;"> Invalid Username Or Password</ul></div>
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                            <input class="form-control" type="email" name="Email" id="logEmail" placeholder="Email" />
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                            <input class="form-control" type="password" name="Password" id="logPssword" placeholder="Password" />
                        </div>
                    </div>
                </form>
                <div class="form-group">
                    <button class="btn btn-info form-control" type="submit" onclick="Login()"><i class="glyphicon glyphicon-log-in"></i> Login</button>
                </div>
                <div class="form-group">
                    @*<a style="float:left">Forget Password ? </a><a style="float:right;cursor:pointer" onclick="SignUp()"> Sign Up</a>*@
                    <a class="btn-link" href="@Url.Action("Registration","Passengers")"> Sign Up</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!--//login boc-->
@section scripts{


    <script defer src="https://maps.googleapis.com/maps/api/js?libraries=places&language=en&callback=initMap&key=AIzaSyAUeFGwxXtr8M8SD82BbA-6857CVPKUhNo" type="text/javascript"></script>


    <script>
        function initMap() {

            var input = document.getElementById('searchTextField');

            autocomplete = new google.maps.places.Autocomplete(input);




        }




    </script>




    <script>



        var distance_in_mile
        var Login;
        var passengerId;



        $(function () {
            $("#from_places, #to_places").on('focus', function () {

                //$('.pac-container').css('margin-top', '-50px');

            });

            // add input listeners
            google.maps.event.addDomListener(window, 'load', function () {

                var fromPlaces = document.getElementById('from_places');
                var toPlaces = document.getElementById('to_places')
                var from_places = new google.maps.places.Autocomplete(fromPlaces);
                var to_places = new google.maps.places.Autocomplete(toPlaces);

                function fromPlacesfunc() {
                    var from_place = from_places.getPlace();
                    var from_address = from_place.formatted_address;
                    $('#origin').val(from_address);

                   $('#postcode').val(from_place.address_components[0].long_name);
                    console.log(place.address_components);


                }
                function toPlacesfunc() {
                    var to_place = to_places.getPlace();
                    var to_address = to_place.formatted_address;
                    $('#destination').val(to_address);

                }

                google.maps.event.addListener(from_places, 'place_changed', fromPlacesfunc);
                google.maps.event.addListener(to_places, 'place_changed', toPlacesfunc);

            });
            // calculate distance
            function calculateDistance() {
                var origin = $('#origin').val();
                var destination = $('#destination').val();
                var service = new google.maps.DistanceMatrixService();
                service.getDistanceMatrix(
                    {
                        origins: [origin],
                        destinations: [destination],
                        travelMode: google.maps.TravelMode.DRIVING,
                        unitSystem: google.maps.UnitSystem.IMPERIAL, // miles and feet.
                        // unitSystem: google.maps.UnitSystem.metric, // kilometers and meters.
                        avoidHighways: false,
                        avoidTolls: false
                    }, callback);
            }
            // get distance results
            function callback(response, status) {
                if (status != google.maps.DistanceMatrixStatus.OK) {
                    $('#result').html(err);

                } else {

                    var origin = response.originAddresses[0];
                    var destination = response.destinationAddresses[0];
                    if (response.rows[0].elements[0].status === "ZERO_RESULTS") {

                        $('#result').html("Better get on a plane. There are no roads between " + origin + " and " + destination);
                    } else {


                        var distance = response.rows[0].elements[0].distance;
                        var duration = response.rows[0].elements[0].duration;
                        console.log(response.rows[0].elements[0].distance);
                        console.log(response.rows[0].elements[0].duration);
                        var distance_in_kilo = distance.value / 1000; // the kilom
                        distance_in_mile = distance.value / 1609.34; // the mile

                        var duration_text = duration.text;
                        console.log(duration_text);
                        var duration_value = duration.value;
                        console.log(duration_value);

                        $('#in_mile').html(distance_in_mile.toFixed(0) + '&nbsp;Miles');
                        $('#inMiles').val(distance_in_mile.toFixed(0));
                        $('#inmile').text(distance_in_mile.toFixed(0));

                        $('#in_kilo').text(distance_in_kilo.toFixed(0));
                        $('#duration_text').html('Duration:&nbsp;' + duration_text);
                        $('#duration_value').text(duration_value);
                        $('#from').text(origin);
                        $('#to').text(destination);


                        var m = distance_in_mile.toFixed(0);
                        //var mile = parseInt(m);
                        $('.fa-spin').show();
                        $.ajax({
                            type: "POST",
                            url: '/Home/getPrice',
                            data: { 'value': m, cartype: $('#cartype').val() },
                            dataType: 'json',
                            cache: false,
                            success: function (data) {
                                // $('#textAmount').val(data.doubleValue);
                                console.log(data.totalAmount);

                                $('#Price').css('display', 'block');

                                $('#Prices').html(data.totalAmount);
                                $("#priceVal").val(data.totalAmount);

                                
                                console.log("your data submited successfull ");
                            },
                            error: function () {

                                console.log('error occure when you sending ajax request');
                            },

                            complete: function () {
                                $('.fa-spin').hide();
                            }
                        });

                        return false;

                    }
                }
            }
            // print results on submit the form

            //$('#distanceform').submit(function (e) {
            //   e.preventDefault();



        //    });
            // submitted form


            var way
            $('#slectoption').on('change', function () {

                way = $(this);

                if (way.val() == 'return') {
                    $('#returndiv').show();
                    $('#datepicker2,#timepicker2').prop('required', true);
                }
                else {
                    $('#returndiv').hide();
                    $('#datepicker2,#timepicker2').prop('required', false);
                }
            });


            var hour;
            $('#hours').on('change', function () {

                hour = $(this);

            });

            var cartype = $('#cartype').val();

            //alert(cartype);
            

            $('#cartype').on('change', function () {

                cartype = $(this);
                var car = $(this).children(":selected").val();

                if (cartype == '') {

                    $('.errormsg').html('please select the car type');

                    cartype = undefined;
                    return false;
                }
                else {
                    $('.errormsg').html('');

                    $("#selectedcar").val(car);
                }

                console.log(car);


               // console.log($("#cartype").val(car))



            });

            var picUpPostCode;
            $('#PostCodeSelect2').on('change', function () {

                picUpPostCode = $(this);

                var postcodetext1 = $('#PostCodeSelect2 :selected').text();

                $('#postcode_1').val(postcodetext1);
            });

            var dropOffPostCode;
            $('#PostCode2Select2').on('change', function () {

                dropOffPostCode = $(this);
                var postcodetext2 = $('#PostCode2Select2 :selected').text();

                $('#postcode_2').val(postcodetext2);

            });



            $('#GetQuote').click(function (e) {




                    $('#jobType').val('Distance');
                    $("#hourError").html('');
                    console.log("getting price by distance");
                    if ($('#from_places').val() == '') {
                        $('#inputError1').html('Please enter your pick up address');

                        return false;
                    }
                    else if ($('#to_places').val() == '') {
                        $('#inputError2').html('Please enter your drop off address');

                        return false;
                    }

                    else if (cartype == undefined) {
                        $('.errormsg').html('please select the car type');
                        return false;
                    }


                    else {
                        $('.errormsg').html('');
                        $('#inputError1').html('');
                        $('#inputError2').html('');
                        $('#datepicker,#timepicker').prop('required', true);


                        e.preventDefault();
                        calculateDistance();
                        $('#GetQuote').hide();

                      //  $('#BookNow').show();
                        $('#priceMileMain').show();
                        //$('#from_places,#to_places,#cartype').attr('disabled', 'disabled');



                    }


                


                var sessionId = @UserSessionId;

                    

                            $("#passengerId").val(sessionId);
                            $("#BookNow").show();


                   


            });


        });
    </script>



    <script type="text/javascript">

        //$('.dhf,#refreshForm2').on('click', function () {
        //    $('#formMain2').find("input,select").not("input[type=button],#datepicker,.timepicker,#BookNow,#LoginPopShow").val('');

        //    $('#in_mile,#duration_text,#Prices').html('');
        //    $('#priceVal').val('');
        //    $('#Price').css('display', 'none');
        //    $('#GetQuote').show();
        //    $('#BookNow').hide();
        //    $('#DriverMsg').hide();
        //    $('#from_places,#to_places,#cartype,#hours,#PostCodeSelect2,#PostCode2Select2').attr('disabled', false);
        //    $('#BookNow').hide();
        //    $("#LoginPopShow").hide();

        //    $("#PostCodeSelect2").select2({
        //        placeholder: "Select a Pick Up Postcode",
        //        allowClear: true

        //    });
        //    $("#PostCode2Select2 ").select2({
        //        placeholder: "Select Drop Off Postcode",
        //        allowClear: true

        //    });



        //});


        $('#addVia2').click(function () {

            $("#via_1").show();
            $('.addVia2_again').show();
            $('#addVia2').show();
        });

        $('.addVia2_again').click(function () {

            $("#via_2").show();
            $('.addVia2_again').hide();
            $('#addVia2').hide();
        });

        ;

    </script>




    <!-- Time -->
    <script type="text/javascript" src="~/js/wickedpicker.js"></script>
    <script type="text/javascript">

        $('.timepicker,.timepicker2').wickedpicker({
            twentyFour: false,

        });
        var timepicker = $('.timepicker').wickedpicker();

        var getCurrentTime = timepicker.wickedpicker('time');
        $('.timepicker').val(getCurrentTime);

    </script>
    <!-- Time -->
    <script type="text/javascript" src="~/js/wickedpicker.js"></script>
    <script src="~/js/jquery-ui.js"></script>

    <script type="text/javascript">

        $('.timepicker,.timepicker2').wickedpicker({
            twentyFour: false,

        });
        var timepicker = $('.timepicker').wickedpicker();

        var getCurrentTime = timepicker.wickedpicker('time');
        $('.timepicker').val(getCurrentTime);

    </script>
    <!--// Time -->
    <script>
        $(function () {
            $("#datepicker,#datepicker1,#datepicker2,#datepicker3").datepicker({ dateFormat: 'dd/mm/yy' });

            $("#datepicker").datepicker().datepicker("setDate", new Date());

            $('.ui-datepicker').hide();

        });


    </script>

    <script>
        $(function () {
            $("#datepicker,#datepicker1,#datepicker2,#datepicker3").datepicker();

        });
    </script>
    <!-- //Calendar -->
    <!-- //carousel -->
    <!--slider-->
  

    <script src="~/js/gainQuote.js"></script>


}